// recursive approach of searching an element in a sorted rotated array....

#include <iostream>

using namespace std;

int search(int a[],int l,int h,int key)
{
    int mid=(l+h)/2;
    if(l>h)
    {
        return -1;
    }
    else if(a[mid]==key)
    return mid;
    else if(a[mid]>a[l])
    {
        if(key>=a[l]&&key<a[mid])
        {
            search(a,l,mid-1,key);
        }
        else
        search(a,mid+1,h,key);
        
    }
    else if(a[mid]<a[h])
    {
        if(key>a[mid]&&key<=a[h])
        {
            search(a,mid+1,h,key);
        }
        else
        search(a,l,mid-1,key);
        
    }
   
}


int main()
{
    int n;
    cin>>n;
    int a[n];
    for(int i=0;i<n;i++)
    {
        cin>>a[i];
    }
    
  int l=0,h=6;
  int key;
  cin>>key;
  
  cout<<search(arr,l,h,key);
  


    return 0;
}
